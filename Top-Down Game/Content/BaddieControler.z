class BaddieControler : ZilchComponent
{
    [Property]
    var PaceSpeed: Real = 30.0;
    var PaceDirection: Real3 = Real3(0.0, 1.0, 0.0);
    [Property]
    var MaxMoveDistance: Real = 15.0;
    var StartPosition: Real3 = Real3();
    
    [Dependency]
    var Transform: Transform = null;
    function Initialize(init : CogInitializer)
    {
        // Updating the enemy's bahavior every logic update
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnlogicUpdate);
        // Have to know where we started to know how far we've moved
        this.StartPosition = this.Owner.Transform.Translation;
    }
        function OnlogicUpdate(event : UpdateEvent)
        {
            // Logic for pacing back and forth
            this.PaceBackAndForth(event);
        }
        function PaceBackAndForth(event: UpdateEvent)
        {
            // Find out how far we've travelled from out start Position
            var displacement = this.Owner.Transform.Translation - this.StartPosition;
            var distanceFromStart= Math.Length(displacement);
            
            // If we have travelled pas our max distance
            if(distanceFromStart >= this.MaxMoveDistance)
            {
                // Change direction to go back the way we came
                this.PaceDirection = -displacement;
            }
            // Ensure the PaceDirection is only a direction via normlization
            this.PaceDirection = Math.Normalize(this.PaceDirection);
            
            // Apply movement
            this.Owner.Transform.Translation += this.PaceDirection * event.Dt * this.PaceSpeed;
        }
    }
